<Page
    x:Class="VRC_Favourite_Manager.Views.FolderPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:viewModels="using:VRC_Favourite_Manager.ViewModels"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:common="using:VRC_Favourite_Manager.Common">

    <Page.DataContext>
        <viewModels:FolderPageViewModel/>
    </Page.DataContext>


    <Page.Resources>
        <common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <common:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <common:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" x:Name="Grid">
        <Button x:Name="RefreshButton" Click ="Refresh_Clicked" Margin="10,12,25,0" Padding="5" BorderThickness="1" BorderBrush="Transparent" Background="Transparent" CornerRadius="8" HorizontalAlignment="Right" VerticalAlignment="Top">
            <FontIcon Glyph="&#xE72C;" FontSize="16"/>
        </Button>
        <StackPanel Orientation="Horizontal">
            <Interactivity:Interaction.Behaviors>
                <core:DataTriggerBehavior Binding="{Binding FolderName}" ComparisonCondition="Equal" Value="Unclassified">
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBlock}" PropertyName="Visibility" Value="Visible"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBox}" PropertyName="Visibility" Value="Collapsed"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=RenameButton}" PropertyName="Visibility" Value="Collapsed"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=RemoveFlyout}" PropertyName="Visibility" Value="Collapsed" />
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=RefreshButton}" PropertyName="Visibility" Value="Visible"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiSelectButton}" PropertyName="Margin" Value="10,10,75,0" />
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiSelectButton_Cancel}" PropertyName="Margin" Value="10,10,75,0" />
                </core:DataTriggerBehavior>
                <core:DataTriggerBehavior Binding="{Binding FolderName}" ComparisonCondition="NotEqual" Value="Unclassified">
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBlock}" PropertyName="Visibility" Value="Visible"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBox}" PropertyName="Visibility" Value="Collapsed"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=RenameButton}" PropertyName="Visibility" Value="Visible"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=RefreshButton}" PropertyName="Visibility" Value="Collapsed"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiSelectButton}" PropertyName="Margin" Value="10,10,25,0" />
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiSelectButton_Cancel}" PropertyName="Margin" Value="10,10,25,0" />
                </core:DataTriggerBehavior>
                <core:DataTriggerBehavior Binding="{Binding ChangeFolderNameLang}" ComparisonCondition="Equal" Value="true">
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBlock}" PropertyName="Visibility"  Value="Collapsed" />
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderUnclassified_JP}" PropertyName="Visibility"  Value="Visible" />
                </core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <!-- TextBlock displayed when not renaming -->
            <TextBlock x:Name="FolderNameTextBlock" 
                       Visibility="{Binding IsRenaming, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                       Text="{Binding FolderName}" 
                       FontSize="24" 
                       FontWeight="Bold" 
                       Margin="20 10"/>
            <TextBlock x:Name="FolderUnclassified_JP"
                       Text="未分類"
                       Visibility="Collapsed"
                       FontFamily="Meiryo"
                       FontSize="24" 
                       FontWeight="Bold" 
                       Margin="20 10"/>
                <!-- Button displayed when not renaming -->
            <!-- Button hidden when file is "Unclassified" -->
            <Button x:Name="RenameButton"
                    Visibility="Collapsed" 
                    Margin="-20,13,0,10"
                    Padding="5"
                    VerticalAlignment="Top"
                    BorderThickness="1" 
                    BorderBrush="Transparent" 
                    Background="Transparent"
                    Click="FolderRename_Start">
                <FontIcon Glyph="&#xE70F;" FontSize="16"/>
                <Interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBox}" PropertyName="Visibility" Value="Visible"/>
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBlock}" PropertyName="Visibility" Value="Collapsed"/>
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=RenameButton}" PropertyName="Visibility" Value="Collapsed"/>
                    </core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </Button>
            <!-- TextBox displayed when renaming -->
            <TextBox x:Name="FolderNameTextBox" 
                     Text="{Binding FolderName, Mode=TwoWay}" 
                     Visibility="{Binding IsRenaming, Converter={StaticResource BooleanToVisibilityConverter}}" 
                     Foreground="Gray"
                     KeyDown="TextBox_KeyDown" 
                     Margin="20 10"
                     VerticalAlignment="Top"
                     Height="20"
                     LostFocus="FolderRename_Cancel">
                <Interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="LostFocus">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBox}" PropertyName="Visibility" Value="Collapsed"/>
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBlock}" PropertyName="Visibility" Value="Visible"/>
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=RenameButton}" PropertyName="Visibility" Value="Visible"/>
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="ContextMenuClosing">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBox}" PropertyName="Visibility" Value="Collapsed"/>
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FolderNameTextBlock}" PropertyName="Visibility" Value="Visible"/>
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=RenameButton}" PropertyName="Visibility" Value="Visible"/>
                    </core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </TextBox>
        </StackPanel>

        <Button x:Name="MultiSelectButton" Margin="10,10,75,0" Content="Select" HorizontalAlignment="Right" VerticalAlignment="Top">
            <Interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Click">
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=SingleClickGrid}" PropertyName="Opacity" Value="0"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiClickGrid}" PropertyName="Opacity" Value="1"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=SingleClickGrid}" PropertyName="IsHitTestVisible" Value="False"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiClickGrid}" PropertyName="IsHitTestVisible" Value="True"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiSelectButton_Cancel}" PropertyName="Visibility" Value="Visible"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiSelectButton}" PropertyName="Visibility" Value="Collapsed"/>
                </core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="MultiSelectButton_Cancel" Margin="10,10,75,0" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Collapsed" Click="GridView_ClearSelection">
            <Interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Click">
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=SingleClickGrid}" PropertyName="Opacity" Value="1"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiClickGrid}" PropertyName="Opacity" Value="0"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=SingleClickGrid}" PropertyName="IsHitTestVisible" Value="True"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiClickGrid}" PropertyName="IsHitTestVisible" Value="False"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiSelectButton_Cancel}" PropertyName="Visibility" Value="Collapsed"/>
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=MultiSelectButton}" PropertyName="Visibility" Value="Visible"/>
                </core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <muxc:GridView x:Name="SingleClickGrid" ItemsSource="{Binding Worlds}" Margin="10,50,10,0" IsItemClickEnabled="True" ItemClick="GridView_ItemClick" Opacity="1" IsHitTestVisible="True" Loaded="SingleClickGrid_Loaded">
            <muxc:GridView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Margin="10"> 
                        <StackPanel.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem 
                                    Text="{Binding DataContext.ViewDetailsText, ElementName=Grid}"
                                    Click="ViewDetails_Click"/>
                                <MenuFlyoutItem 
                                    Text="{Binding DataContext.MoveToAnotherFolderText, ElementName=Grid}"
                                    Click="MoveToAnotherFolder_Click"/>
                                <MenuFlyoutItem 
                                    Text="{Binding DataContext.RemoveFromFolderText, ElementName=Grid}"
                                    Click="Remove_Click"/>
                            </MenuFlyout>
                        </StackPanel.ContextFlyout>
                        <Viewbox Width="246" Height="184.5">
                            <Grid Width="246" Height="184.5">
                                <Image Source="{Binding ThumbnailImageUrl}" Stretch="Fill" Width="246" Height="184.5"/>
                            </Grid>
                        </Viewbox>
                        <TextBlock Text="{Binding WorldName}" FontWeight="Bold" TextTrimming="CharacterEllipsis" Width="246"/>
                        <TextBlock Text="{Binding AuthorName, Converter={StaticResource StringFormatConverter}, ConverterParameter='By {0}'}" TextTrimming="CharacterEllipsis" Width="246"/>
                    </StackPanel>
                </DataTemplate>
            </muxc:GridView.ItemTemplate>
        </muxc:GridView>
        <muxc:GridView x:Name="MultiClickGrid" ItemsSource="{Binding Worlds}" Margin="10,50,10,0" IsItemClickEnabled="True" SelectionMode="Multiple" SelectionChanged="GridView_SelectionChanged" Opacity="0" IsHitTestVisible="False" Loaded="MultiClickGrid_Loaded">
            <muxc:GridView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Margin="10">
                        <StackPanel.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem 
                                    Text="{Binding DataContext.MoveToAnotherFolderText, ElementName=Grid}"
                                    Click="MultiMoveToAnotherFolder_Click"/>
                                <MenuFlyoutItem 
                                    Text="{Binding DataContext.RemoveFromFolderText, ElementName=Grid}"
                                    Click="MultiRemove_Click"/>
                            </MenuFlyout>
                        </StackPanel.ContextFlyout>
                        <Viewbox Width="246" Height="184.5">
                            <Grid Width="246" Height="184.5">
                                <Image Source="{Binding ThumbnailImageUrl}" Stretch="Fill" Width="246" Height="184.5"/>
                            </Grid>
                        </Viewbox>
                        <TextBlock Text="{Binding WorldName}" FontWeight="Bold" TextTrimming="CharacterEllipsis" Width="246"/>
                        <TextBlock Text="{Binding AuthorName, Converter={StaticResource StringFormatConverter}, ConverterParameter='By {0}'}" TextTrimming="CharacterEllipsis" Width="246"/>
                    </StackPanel>
                </DataTemplate>
            </muxc:GridView.ItemTemplate>
        </muxc:GridView>
    </Grid>
</Page>